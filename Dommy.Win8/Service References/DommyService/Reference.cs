////------------------------------------------------------------------------------
//// <auto-generated>
////     Ce code a été généré par un outil.
////     Version du runtime :4.0.30319.17929
////
////     Les modifications apportées à ce fichier peuvent provoquer un comportement incorrect et seront perdues si
////     le code est régénéré.
//// </auto-generated>
////------------------------------------------------------------------------------

//// 
//// This code was auto-generated by Microsoft.VisualStudio.ServiceReference.Platforms, version 11.0.50727.1
//// 
//namespace Dommy.Win8.DommyService {
    
    
//    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
//    [System.ServiceModel.ServiceContractAttribute(ConfigurationName="DommyService.ActionService")]
//    public interface ActionService {
        
//        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ActionService/GetData", ReplyAction="http://tempuri.org/ActionService/GetDataResponse")]
//        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(Dommy.Model.AboutActionData))]
//        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(Dommy.Model.OnOffLightActionData))]
//        System.Threading.Tasks.Task<Dommy.Model.ActionData> GetDataAsync(int id);
        
//        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ActionService/GetDatas", ReplyAction="http://tempuri.org/ActionService/GetDatasResponse")]
//        System.Threading.Tasks.Task<System.Collections.ObjectModel.ObservableCollection<Dommy.Model.ActionData>> GetDatasAsync(System.Collections.ObjectModel.ObservableCollection<int> ids);
        
//        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ActionService/Run", ReplyAction="http://tempuri.org/ActionService/RunResponse")]
//        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(Dommy.Model.AboutActionData))]
//        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(Dommy.Model.OnOffLightActionData))]
//        System.Threading.Tasks.Task RunAsync(Dommy.Model.ActionData data);
        
//        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ActionService/GetActions", ReplyAction="http://tempuri.org/ActionService/GetActionsResponse")]
//        System.Threading.Tasks.Task<System.Collections.ObjectModel.ObservableCollection<Dommy.Model.ActionData>> GetActionsAsync();
//    }
    
//    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
//    public interface ActionServiceChannel : Dommy.Win8.DommyService.ActionService, System.ServiceModel.IClientChannel {
//    }
    
//    [System.Diagnostics.DebuggerStepThroughAttribute()]
//    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
//    public partial class ActionServiceClient : System.ServiceModel.ClientBase<Dommy.Win8.DommyService.ActionService>, Dommy.Win8.DommyService.ActionService {
        
//        /// <summary>
//        /// Implement this partial method to configure the service endpoint.
//        /// </summary>
//        /// <param name="serviceEndpoint">The endpoint to configure</param>
//        /// <param name="clientCredentials">The client credentials</param>
//        static partial void ConfigureEndpoint(System.ServiceModel.Description.ServiceEndpoint serviceEndpoint, System.ServiceModel.Description.ClientCredentials clientCredentials);
        
//        public ActionServiceClient() : 
//                base(ActionServiceClient.GetDefaultBinding(), ActionServiceClient.GetDefaultEndpointAddress()) {
//            this.Endpoint.Name = EndpointConfiguration.NetHttpBinding_ActionService.ToString();
//            ConfigureEndpoint(this.Endpoint, this.ClientCredentials);
//        }
        
//        public ActionServiceClient(EndpointConfiguration endpointConfiguration) : 
//                base(ActionServiceClient.GetBindingForEndpoint(endpointConfiguration), ActionServiceClient.GetEndpointAddress(endpointConfiguration)) {
//            this.Endpoint.Name = endpointConfiguration.ToString();
//            ConfigureEndpoint(this.Endpoint, this.ClientCredentials);
//        }
        
//        public ActionServiceClient(EndpointConfiguration endpointConfiguration, string remoteAddress) : 
//                base(ActionServiceClient.GetBindingForEndpoint(endpointConfiguration), new System.ServiceModel.EndpointAddress(remoteAddress)) {
//            this.Endpoint.Name = endpointConfiguration.ToString();
//            ConfigureEndpoint(this.Endpoint, this.ClientCredentials);
//        }
        
//        public ActionServiceClient(EndpointConfiguration endpointConfiguration, System.ServiceModel.EndpointAddress remoteAddress) : 
//                base(ActionServiceClient.GetBindingForEndpoint(endpointConfiguration), remoteAddress) {
//            this.Endpoint.Name = endpointConfiguration.ToString();
//            ConfigureEndpoint(this.Endpoint, this.ClientCredentials);
//        }
        
//        public ActionServiceClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
//                base(binding, remoteAddress) {
//        }
        
//        public System.Threading.Tasks.Task<Dommy.Model.ActionData> GetDataAsync(int id) {
//            return base.Channel.GetDataAsync(id);
//        }
        
//        public System.Threading.Tasks.Task<System.Collections.ObjectModel.ObservableCollection<Dommy.Model.ActionData>> GetDatasAsync(System.Collections.ObjectModel.ObservableCollection<int> ids) {
//            return base.Channel.GetDatasAsync(ids);
//        }
        
//        public System.Threading.Tasks.Task RunAsync(Dommy.Model.ActionData data) {
//            return base.Channel.RunAsync(data);
//        }
        
//        public System.Threading.Tasks.Task<System.Collections.ObjectModel.ObservableCollection<Dommy.Model.ActionData>> GetActionsAsync() {
//            return base.Channel.GetActionsAsync();
//        }
        
//        public virtual System.Threading.Tasks.Task OpenAsync() {
//            return System.Threading.Tasks.Task.Factory.FromAsync(((System.ServiceModel.ICommunicationObject)(this)).BeginOpen(null, null), new System.Action<System.IAsyncResult>(((System.ServiceModel.ICommunicationObject)(this)).EndOpen));
//        }
        
//        public virtual System.Threading.Tasks.Task CloseAsync() {
//            return System.Threading.Tasks.Task.Factory.FromAsync(((System.ServiceModel.ICommunicationObject)(this)).BeginClose(null, null), new System.Action<System.IAsyncResult>(((System.ServiceModel.ICommunicationObject)(this)).EndClose));
//        }
        
//        private static System.ServiceModel.Channels.Binding GetBindingForEndpoint(EndpointConfiguration endpointConfiguration) {
//            if ((endpointConfiguration == EndpointConfiguration.NetHttpBinding_ActionService)) {
//                System.ServiceModel.Channels.CustomBinding result = new System.ServiceModel.Channels.CustomBinding();
//                result.Elements.Add(new System.ServiceModel.Channels.BinaryMessageEncodingBindingElement());
//                System.ServiceModel.Channels.HttpTransportBindingElement httpBindingElement = new System.ServiceModel.Channels.HttpTransportBindingElement();
//                httpBindingElement.AllowCookies = true;
//                httpBindingElement.MaxBufferSize = int.MaxValue;
//                httpBindingElement.MaxReceivedMessageSize = int.MaxValue;
//                result.Elements.Add(httpBindingElement);
//                return result;
//            }
//            throw new System.InvalidOperationException(string.Format("Could not find endpoint with name \'{0}\'.", endpointConfiguration));
//        }
        
//        private static System.ServiceModel.EndpointAddress GetEndpointAddress(EndpointConfiguration endpointConfiguration) {
//            if ((endpointConfiguration == EndpointConfiguration.NetHttpBinding_ActionService)) {
//                return new System.ServiceModel.EndpointAddress("http://localhost/ActionService");
//            }
//            throw new System.InvalidOperationException(string.Format("Could not find endpoint with name \'{0}\'.", endpointConfiguration));
//        }
        
//        private static System.ServiceModel.Channels.Binding GetDefaultBinding() {
//            return ActionServiceClient.GetBindingForEndpoint(EndpointConfiguration.NetHttpBinding_ActionService);
//        }
        
//        private static System.ServiceModel.EndpointAddress GetDefaultEndpointAddress() {
//            return ActionServiceClient.GetEndpointAddress(EndpointConfiguration.NetHttpBinding_ActionService);
//        }
        
//        public enum EndpointConfiguration {
            
//            NetHttpBinding_ActionService,
//        }
//    }
//}
